#!/usr/bin/env bash

set -e

# returns dokman directory
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

DOKMAN_DIR_NAME=$(basename ${DIR})

source "${DIR}/autoload.sh"

writeInfo "Installing dockman!"

# install everything in parent folder
installPath="${DIR}/../"

folders=(
    services
    services/links
    services/ports
    configurations
    environments
    images
    scripts
)

files=(
    .defaults
    .env
)

helperScripts=(
    enter
    env
)

gitIgnore=(
    "# with this file you can override .defaults file values"
    /.env
    "# project name is generated by dokman"
    /.projectName
)

# setup directories if needed
for directory in "${folders[@]}"
do
	if [ ! -d "${installPath}${directory}" ]; then
        mkdir "${installPath}${directory}"
        writeInfo "Created directory ${directory}"
    else
        writeInfo "Directory ${directory} already exists, skipping!"
    fi
done

# setup files if needed
for file in "${files[@]}"
do
	if [ ! -f "${installPath}${file}" ]; then
        touch "${installPath}${file}"
        writeInfo "Created file ${file}"
    else
        writeInfo "File ${file} already exists, skipping!"
    fi
done

# setup git ignore file if needed
if [ ! -f "${installPath}.gitignore" ]; then
    touch "${installPath}.gitignore"
    writeInfo "Created file .gitignore"
    for line in "${gitIgnore[@]}"
    do
        echo "${line}" >> "${installPath}.gitignore"
    done
else
    writeInfo "File .gitignore already exists, skipping!"
fi



for helperScript in "${helperScripts[@]}"
do
    if [ ! -f "${installPath}{$helperScript}" ]; then
        envScriptContent=$(cat "${DIR}/files/${helperScript}")
        envScriptContent="${envScriptContent/:dokmanDirName:/$DOKMAN_DIR_NAME}"

        # setup helper sh scripts
        writeFile "${installPath}${helperScript}" "${envScriptContent}"
        chmod +x "${installPath}${helperScript}"
        writeInfo "Created bash helper ${helperScript}"
    else
        writeInfo "Bash helper ${helperScript} already exists, skipping!"
    fi
done

writeInfo "Installation done!"
