#!/usr/bin/env bash

set -e

# returns dokman directory
readonly SCRIPT_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
# install everything in parent folder
readonly installPath="${SCRIPT_DIR}/../"

readonly DOKMAN_DIR_NAME=$(basename ${SCRIPT_DIR})

source "${SCRIPT_DIR}/autoload.sh"

####################################################################
####################################################################
# Configuration
####################################################################

folders=(
    services
    services/links
    services/ports
    configurations
    environments
    images
    scripts
)

files=(
    .defaults
    .env
)

templateScripts=(
    .bootstrap
    enter
    env
    install
    run
)

gitIgnore=(
    "# exclude man .env file"
    /.env
    "# exclude all environments specific .env files"
    /environments/*/.env
)

####################################################################
####################################################################
# Install logic
####################################################################

title "Installing dockman!"

readonly DOKMAN_SITE_NAME=$(questionForceNotEmptyResponse "Site name" "Site name can not be empty string")

title "Setup directories if needed..."

# setup directories if needed
for directory in "${folders[@]}"
do
    label=$(foregroundColor "${directory}" "yellow")
	if [ ! -d "${installPath}${directory}" ]; then
        mkdir "${installPath}${directory}"
        success "Created directory ${label}"
    else
        info "Directory ${label} already exists, skipping!"
    fi
done

title "Setup files if needed..."

# setup empty files if needed
for file in "${files[@]}"
do
    label=$(foregroundColor ".gitignore" "yellow")
	if [ ! -f "${installPath}${file}" ]; then
        touch "${installPath}${file}"
        success "Created file ${label}"
    else
        info "File ${label} already exists, skipping!"
    fi
done

title "Setup .gitignore if needed..."

# setup git ignore file if needed
label=$(foregroundColor ".gitignore" "yellow")
if [ ! -f "${installPath}.gitignore" ]; then
    touch "${installPath}.gitignore"
    success "Created file ${label}"
    for line in "${gitIgnore[@]}"
    do
        echo "${line}" >> "${installPath}.gitignore"
    done
else
    info "File ${label} already exists, skipping!"
fi

title "Copying template scripts if needed..."

# setup files from templates
for templateScript in "${templateScripts[@]}"
do
    pathToScript="${installPath}${templateScript}"
    label=$(foregroundColor ${templateScript} "yellow")
    if [ ! -f "${pathToScript}" ]; then
        scriptContent=$(cat "${SCRIPT_DIR}/templates/${templateScript}")
        scriptContent="${scriptContent//:dokmanDirName:/$DOKMAN_DIR_NAME}"
        scriptContent="${scriptContent//:dokmanSiteName:/$DOKMAN_SITE_NAME}"

        # setup template files
        createFile "${pathToScript}" "${scriptContent}"
        chmod +x "${pathToScript}"
        success "Copied template file ${label}"
    else
        info "File ${label} already exists, skipping!"
    fi
done

success "Installation done!"
