#!/usr/bin/env bash

set -e

# returns dokman directory
readonly DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
# install everything in parent folder
readonly installPath="${DIR}/../"

readonly DOKMAN_DIR_NAME=$(basename ${DIR})

source "${DIR}/autoload.sh"

####################################################################
####################################################################
# Configuration
####################################################################

folders=(
    services
    services/links
    services/ports
    configurations
    environments
    images
    scripts
)

files=(
    .defaults
    .env
)

helperScripts=(
    enter
    env
    install
)

gitIgnore=(
    "# with this file you can override .defaults file values"
    /.env
    "# project name is generated by dokman"
    /.projectName
)

####################################################################
####################################################################
# Install logic
####################################################################

title "Installing dockman!"

readonly DOKMAN_SITE_NAME=$(questionForceNotEmptyResponse "Site name" "Site name can not be empty string")

title "Setup directories if needed..."

# setup directories if needed
for directory in "${folders[@]}"
do
	if [ ! -d "${installPath}${directory}" ]; then
        mkdir "${installPath}${directory}"
        success "Created directory ${directory}"
    else
        info "Directory ${directory} already exists, skipping!"
    fi
done

title "Setup files if needed..."

# setup files if needed
for file in "${files[@]}"
do
	if [ ! -f "${installPath}${file}" ]; then
        touch "${installPath}${file}"
        success "Created file ${file}"
    else
        info "File ${file} already exists, skipping!"
    fi
done

title "Setup .gitignore if needed..."

# setup git ignore file if needed
if [ ! -f "${installPath}.gitignore" ]; then
    touch "${installPath}.gitignore"
    success "Created file .gitignore"
    for line in "${gitIgnore[@]}"
    do
        echo "${line}" >> "${installPath}.gitignore"
    done
else
    info "File .gitignore already exists, skipping!"
fi

title "Setting up helper scripts if needed..."

for helperScript in "${helperScripts[@]}"
do
    pathToScript="${installPath}${helperScript}"
    if [ ! -f "${pathToScript}" ]; then
        scriptContent=$(cat "${DIR}/templates/${helperScript}")
        scriptContent="${scriptContent//:dokmanDirName:/$DOKMAN_DIR_NAME}"
        scriptContent="${scriptContent//:dokmanSiteName:/$DOKMAN_SITE_NAME}"

        # setup helper sh scripts
        createFile "${pathToScript}" "${scriptContent}"
        chmod +x "${pathToScript}"
        success "Created bash helper ${helperScript}"
    else
        info "Bash helper ${helperScript} already exists, skipping!"
    fi
done

success "Installation done!"
